@using Axe.Models;
@model Axe.ViewModels.CompilerVm.CodeBlockVm
@{
    ViewData["Title"] = "Solve task #" + Model.Id;
}

@section Scripts
    {
    <script src="~/js/compiler.solve.js"></script>
}

<h2>Roslyn .NET compiler platform page</h2>

<p><b>Task:</b> @Model.Task</p>

<form id="formSolve" asp-controller="Compiler" asp-action="Solve" method="post">
    <input asp-for="Id" value="@Model.Id" hidden />
    <input asp-for="Task" value="@Model.Task" hidden />
    <div class="form-group">
        <label asp-for="SourceCode"></label>
        <textarea asp-for="SourceCode" id="sourceCodeTextArea" rows="30" value="@Model.SourceCode" class="form-control"></textarea>
    </div>
    <input id="btnCheck" type="submit" value="Check" class="btn btn-primary"/>
</form>

<br />

@switch (Model.Result)
{
    case CodeBlockResult.Failed:
    case CodeBlockResult.Error:
        <div class="alert alert-danger" role="alert">
            <div asp-validation-summary="All"></div>
        </div>
        break;
    case CodeBlockResult.Unknown:
        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>
        }
        break;
    case CodeBlockResult.Success:
        <div class="alert alert-success" role="alert">
            All is done right
        </div>
        break;
}